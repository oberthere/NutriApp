<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>edu.rit.swen262</groupId>
	<artifactId>NUTRiAPP-2-DESIGN-PROJECT</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>NUTRiAPP-2</name>
	<description>
    YOUR PROJECT DESCRIPTION HERE
  </description>

	<properties>

    <!-- General build properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>21</java.version>
		<spring-shell.version>3.4.0</spring-shell.version>

    <!-- Application build dependency versions -->
    <maven.compiler.version>3.13.0</maven.compiler.version>
    <maven.exec.version>1.6.0</maven.exec.version>
    <maven.assembly.version>3.7.1</maven.assembly.version>

    <!-- Test dependency versions
         JUnit 5 is automatically included in Spring Boot.
     -->
    <mockito.version>5.12.0</mockito.version>

    <!-- Test build dependency versions -->
    <maven.surefire.version>3.2.5</maven.surefire.version>
    <jacoco.version>0.8.12</jacoco.version>

  </properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.shell</groupId>
			<artifactId>spring-shell-starter</artifactId>
		</dependency>

    <!-- START: Helpful libraries (remove if you don't need these) -->
		<dependency>
			<groupId>net.sf.supercsv</groupId>
			<artifactId>super-csv</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
    <!-- END: Helpful libraries -->

    <!-- START: Unit testing libraries -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.shell</groupId>
      <artifactId>spring-shell-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- END: Unit testing libraries -->

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.shell</groupId>
				<artifactId>spring-shell-dependencies</artifactId>
				<version>${spring-shell.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
      <!-- START: Application build plugins -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
      <!-- END: Application build plugins -->

      <!-- START: Testing plugins -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
          </dependency>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <argLine>
            --illegal-access=permit -XX:+EnableDynamicAgentLoading
          </argLine>
          <testFailureIgnore>true</testFailureIgnore>
          <forkCount>2</forkCount>
          <reuseForks>true</reuseForks>
          <argLine>${surefireArgLine}</argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven.surefire.version}</version>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <configuration>
          <append>true</append>
          <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
          <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
        </configuration>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- END: Testing plugins -->

    </plugins>
	</build>

</project>
